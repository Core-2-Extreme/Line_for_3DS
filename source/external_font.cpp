#include <string>
#include <3ds.h>
#include "setting_menu.hpp"
#include "draw.hpp"
#include "external_font.hpp"
#include "log.hpp"
#include "types.hpp"
#include "file.hpp"
#include "hid.hpp"
#include <unistd.h>


double exfont_font_interval[10240] =
{
  //#0000~#007F (128) Basic latin
  20,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,
   6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,
   6,  4,  6, 10, 10, 14, 11,  4,  6,  6,  7, 10,  4,  6,  4,  6,
  10, 10, 10, 10, 10, 10, 10, 10, 10, 10,  4,  4, 10, 10, 10, 10,
  16, 12, 10, 12, 11, 10,  9, 12, 10,  4,  8, 11,  9, 12, 10, 12,
  10, 12, 11, 10, 10, 10, 12, 16, 10, 12, 10,  5,  6,  5,  8, 10,
   5,  9,  9,  9,  9, 10,  6,  9,  8,  4,  5,  8,  4, 12,  8, 10,
   9,  9,  7,  8,  6,  8,  8, 12,  8,  9,  9,  6,  4,  6, 10,  6,
  //#0080~#00FF ( 96) Latin-1 Supplement
   2,  4, 10, 10, 10, 10,  4, 10,  6, 14,  8,  9, 10,  6, 14, 10,
   6, 10,  8,  8,  5,  8, 10,  4,  6,  5,  8,  9, 14, 14, 14, 10,
  12, 12, 12, 12, 12, 12, 17, 12, 10, 10, 10, 10,  5,  5,  7,  6,
  13, 10, 12, 12, 12, 12, 12,  9, 13, 10, 10, 10, 10, 12, 11, 10,
  10, 10, 10, 10, 10, 10, 14,  9, 10, 10, 10, 10,  5,  5,  7,  6,
  10,  8, 10, 10, 10, 10, 10, 10, 10,  8,  8,  8,  8, 10,  9, 10,
  //#0250~#02AF ( 96) IPA Extensions
  10,  9,  9,  9,  9,  9, 11, 11, 10, 10, 13,  8,  8, 12,  9,  7,
  11,  9, 10, 10, 10,  8,  8,  8,  6,  5,  6,  8,  8,  6, 10, 12,
  12, 12, 10, 10,  8, 10, 12, 12, 10,  7,  7,  9,  7,  7,  7,  7,
   9,  9,  9,  8,  8,  8,  9,  6,  7, 11, 10,  9, 10, 14, 10, 10,
  12, 10, 10, 10,  9,  8,  9,  9, 10,  9,  9, 11,  8,  8,  9,  7,
  11,  9,  8, 16, 16, 16, 12, 11, 12, 14, 12, 12, 12, 10, 12, 14,
  //#02B0~#02FF ( 80) Spacing Modifier Letters
  12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
  12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
  12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
  12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
  12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
  //#0300~#036F (112) Combining Diacritical Marks
   6,  5,  7,  8,  8, 10,  6,  4,  6,  6,  6,  8,  7,  4,  6,  8,
   8,  6,  4,  4,  4,  4,  6,  5,  4,  4,  6,  5,  4,  6,  6,  6,
   6,  6,  6,  4,  6,  6,  4,  6,  6,  4,  6,  6,  7,  7,  6,  6,
   8,  8, 10, 10,  8,  8, 10,  8, 11,  4,  6,  6,  6,  6,  4, 10,
   6,  5,  8,  4,  8,  5,  9,  9,  6,  6,  8,  8,  8, 12,  6,  2,
   6,  4,  8,  6,  6,  6, 10,  4,  4,  7,  8,  5, 12, 12, 14, 14,
  11, 11, 16,  7,  7,  5,  8,  9,  7,  8,  9, 11,  8,  7,  8,  8,
  //#0370~#03FF (135) Greek and Coptic
  10, 12, 14, 14,  6,  6, 14, 14,          5,  8,  9,  8,  4,  8,
                   4,  8, 12,  4, 13, 13,  6,     13,     14, 13,
   8, 12, 10,  9, 12, 10, 11, 10, 12,  4, 11, 12, 12, 10, 10, 12,
  10, 11,     10, 10, 12, 12, 12, 12, 12,  6, 12, 10,  8,  8,  4,
   8, 10, 10, 10, 10,  8,  9,  8, 10,  4,  9, 10,  8, 10,  8, 10,
  12, 10,  9, 10,  8,  8, 11, 10, 12, 12,  6,  8, 10,  8, 12, 12,
  10, 11, 12, 13, 12, 10, 13, 10, 12, 10, 12, 11,  9, 10, 10,  8,
  12, 12, 13, 12, 11,  9, 10, 10, 10,  8, 12, 11, 11, 11, 10,  9,
  10, 10,  9,  6, 12,  8,  8, 10,  8, 11, 14, 12, 11, 11, 11, 11,
  //#0400~#04FF (256) Cyrillic
  10, 10, 14,  9, 12, 11,  4,  6,  9, 18, 16, 14, 10, 13, 12, 10,
  12, 10, 10,  9, 12, 10, 16, 10, 10, 10, 10, 11, 12, 10, 12, 10,
  11, 12, 10, 12, 12, 12, 12, 11, 14, 15, 13, 13, 10, 12, 15, 11,
  10, 10,  9,  7, 11, 10, 12,  8,  8,  8,  9,  9, 10,  8, 10,  8,
   9,  9,  9, 10, 14, 10,  9,  9, 12, 13, 11, 11,  9,  9, 12,  9,
   8, 10,  9,  7, 10,  9,  4,  6,  6, 15, 13,  9,  9, 10, 10,  8,
  16, 12, 11, 10, 15, 11, 12, 12, 15, 13, 12, 11, 15, 13, 10,  8,
  14, 12, 12, 10, 12, 10, 12, 10, 21, 17, 12, 10, 16, 12, 16, 12,
  12, 10, 11,  8,  8,  8,  8, 13, 14, 12, 14, 10, 12, 10, 12, 10,
   7,  7, 11,  8, 10,  8, 16, 12, 10,  8, 10,  9, 10,  9, 12, 10,
  14, 10, 12, 10, 15, 11, 12,  9, 12, 10, 12,  9, 10,  9, 12, 10,
  12, 10, 12, 10, 16, 12, 12, 10, 11,  9, 10,  8, 14, 12, 14, 12,
   4, 16, 12, 10,  9, 12, 10, 12, 10, 14, 10, 11,  9, 15, 11,  6,
  12, 10, 12, 10, 17, 14, 10, 10, 12, 10, 12, 10, 16, 12, 10,  8,
  10,  9, 10,  8, 10,  8, 12, 10, 12, 10, 12, 10, 11,  9, 12, 10,
  12, 10, 12, 10, 11,  9, 10,  8, 13, 11, 12,  8, 13, 11, 12, 10,
  //#0500~#052F ( 48) Cyrillic Supplement
  12,  9, 16, 12, 16, 12, 11, 10, 16, 12, 18, 14, 12, 10, 14, 10,
  10,  8, 12, 10, 16, 14, 14, 14, 16, 13, 12, 10, 16, 14, 12, 10,
  16, 13, 18, 14, 13, 11, 13, 11, 14, 12, 22, 19, 14, 12, 13, 11,
  //#0530~#058F ( 89) Armenian
      11, 10,  8,  8, 10,  8,  8, 11,  9,  7,  8, 10, 11, 12,  8,
   8, 10, 10,  9, 11, 10, 10, 10,  8,  8, 10,  8, 11,  8, 11,  8,
   8,  8,  9, 10, 12, 10, 12,          4,  4,  4,  6,  4,  6,  8,
      10,  8,  8,  8,  8,  8,  8,  7,  7,  8,  8,  6,  8,  8,  8,
   8,  8,  8,  8,  9,  5,  7,  6,  8,  6, 10,  8,  8,  8,  8, 10,
   8,  8,  6, 10,  6,  6,  9,  9,      4,  8,         12, 12, 10,
  //#0590~#05FF ( 88) Hebrew
       5,  7,  4,  4,  5,  5,  4,  6,  5,  5,  5,  5,  5,  6,  8,
   5,  6,  7,  5,  4,  5,  6,  4,  5,  5,  5,  4,  5,  5,  6,  4,
   4,  6,  6,  6,  4,  6,  6,  4,  4,  4,  3,  6,  4,  4,  8,  4,
   4,  4,  4,  4,  4,  5,  8,  7,
  10, 10,  8, 10, 10,  7,  6, 10, 10,  7,  9,  9,  8, 10, 10,  7,
   6, 10, 10,  9, 10,  8,  9, 10,  9, 11, 11,                 10,
  10, 10, 10,  5,  8,
  //#0600~#06FF (255) Arabic
  14, 20, 10, 20, 20, 18, 11, 11, 12, 12, 14,  7,  4,  6, 11,  9,
   6,  5,  6,  7,  7,  6,  7,  5,  5,  4,  5,  4, 18,      6,  9,
  11, 10,  6,  4, 10,  4, 12,  4, 12,  8, 12, 12,  9,  9,  9,  7,
   7,  8,  8, 18, 18, 20, 20, 14, 14, 10, 10, 14, 14, 11, 11, 11,
   7, 14, 13, 12, 11, 10, 12,  8, 10, 12, 12,  6,  6,  6,  6,  6,
   6,  7,  5,  6,  5,  5,  4,  7,  4,  4,  5,  4,  4,  5,  4,  5,
   5,  5,  8,  8,  8,  8,  8,  8,  8,  8,  8,  5,  4,  8, 12, 10,
   4,  6,  5,  5,  5,  7, 12, 12, 12, 12, 12, 12, 12, 12, 13, 12,
  12,  9,  9,  9,  9,  9,  9,  9,  7,  7,  7,  7,  7,  7,  7,  7,
   7,  9,  9,  8,  8, 10,  9,  9,  8,  8, 18, 18, 18, 20, 12, 20,
  10, 14, 14, 14, 14, 14, 14, 13, 13, 14, 16, 14, 12, 12, 12, 14,
  14, 14, 14, 14, 14, 11, 11, 12,  8, 10, 12, 12, 12, 12, 12,  8,
   8,  8,  8,  8, 10, 10, 10, 10, 10, 10, 10, 10, 12, 14, 12,  8,
  12, 12, 11, 11,  6,  8, 11, 10,  7,  7,  7,  7, 11, 12, 14,  4,
   4,  7,  7, 11,  5,  7,  8,  8,  8,  8,  5,  5,  5,  7,  7,  9,
   5,  5,  8,  8,  8,  8,  6,  8,  8,  8, 16, 16,  8,  6,  6,  9,
  //#0900~#097F (128) Devanagari
   9, 10,  9, 12, 12, 13, 16, 10, 10, 12, 14, 16, 12, 12, 12, 12,
  12, 16, 16, 16, 16, 12, 14, 12, 12, 12, 13, 14, 13, 14, 13, 10,
  10, 12, 10, 13, 12, 11, 10, 11, 12, 12, 12, 13, 12, 13, 12, 12,
  10, 10, 12, 14, 14, 12, 12, 12, 12, 10,  4,  6,  9,  8, 14, 15,
  15, 10, 12, 10, 10, 10,  9,  9,  9, 15, 15, 15, 15, 11,  6, 10,
  14,  9, 12,  9,  9,  9,  9,  9, 12, 14, 12, 13, 12, 10, 13, 12,
  16, 12, 11, 12,  4,  6,  8,  6, 10,  8, 12, 10,  9, 10, 10,  9,
   6,  4, 12, 13, 16, 16, 13, 13, 18, 13, 11, 12, 15,  9, 13, 13,
  //#0A00~#0A7F ( 79) Gurmukhi
       9, 10,  6,     13, 16, 14, 14, 12, 12,                 11,
  13,         12, 13, 12, 12, 12, 13, 12, 12, 12, 12, 10, 11, 10,
  12, 12, 12, 12, 12, 12, 12, 12, 12,     12, 11, 11, 11, 11, 12,
  10,     12, 12,     12, 11,     11, 11,          9,     14, 14,
  14, 10, 10,                 10,  9,          9, 10, 12,
       8,                             12, 13, 12, 12,     12,
                          10,  9, 10, 10, 10,  9, 10, 10, 10, 10,
  12, 12, 11, 12, 14,  7,
  //#0B80~#0BFF ( 72) Tamil
           9, 12,     16, 18, 15, 11, 16, 20,             13, 13,
  14,     12, 12, 21, 11,             13, 10,     14,     16, 13,
              21, 11,             11, 17, 11,             12, 12,
  10, 13, 13, 15, 12, 14, 18, 17, 17, 21,                 17, 12,
  11, 17, 21,             19, 19, 21,     20, 20, 19,  9,
  13,                         21,
                          12, 11, 16, 12, 12, 15, 15, 13, 16, 13,
  12, 13, 14, 16, 16, 22, 12, 20, 22, 16, 14,
  //#0C00~#0C7F ( 96) Telugu
   9, 14, 17, 13,     12, 12, 10, 18, 12, 16, 20, 14,     10, 10,
  12,     10, 10, 16,  9, 11, 10, 15, 10, 11, 11, 10, 18, 12, 14,
  10, 12, 12, 12, 12, 11, 11, 11, 10,     10, 10, 11, 12, 15, 18,
  10, 14, 10, 10, 13, 10, 10, 14, 11, 16,             11, 19, 14,
  14, 14, 19, 15, 21,     19, 19, 21,     21, 21, 22, 18,
                      14, 14,     13, 12, 11,
  22, 20,  7, 10,         10, 12, 13,  9, 11, 14, 13, 10, 14, 13,
                                  10,  4,  8, 12, 13, 13, 13, 13,
  //#0C80~#0CFF ( 88) Kannada
  10,  9, 15, 12,     11, 12, 10, 14, 16, 20, 16, 12,     11, 11,
  11,     12, 12, 12,  8, 13,  9, 12, 12, 12, 12, 12, 18, 15, 11,
  10, 11, 11, 12, 10, 11, 11, 11, 10,     11, 11, 11, 11, 16, 18,
  10, 11, 12, 10,     10, 10, 10, 10, 12,          8,  8, 16, 15,
  18, 15, 19, 15, 18,     14, 19, 19,     22, 21, 16, 15,
                      14, 15,                             10,
  22, 16, 10, 10,         10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
      10, 18,
  //#0D80~#0DFF ( 90) Sinhala
          16, 16,     11, 15, 15, 15, 10, 11, 13, 18, 16, 21, 16,
  22, 12, 13, 20, 12, 12, 18,             14, 12, 12, 12, 12, 14,
  12, 12, 12, 20, 17, 15, 12, 12, 12, 12, 12, 18, 12, 13, 12,  8,
  12, 16,      8, 12, 12, 12, 13, 12, 12, 12, 11,     13,
  12, 12, 12, 12, 13, 13, 12,             14,                 16,
  17, 17, 14, 14, 14,     14,     16, 22, 22, 22, 21, 21, 21, 19,
                          11, 13, 16, 17, 13,  9, 15, 13, 11, 16,
          22, 18, 16,
  //#0E00~#0E7F ( 87) Thai
      10, 11, 11, 11, 11, 11,  8,  9, 12, 12, 12, 13, 14, 11, 11,
   9, 13, 13, 14, 11, 11, 10, 11,  9, 12, 10, 10, 10, 10, 11, 11,
  11, 10, 10,  8, 10,  9, 11,  9, 11, 12, 10, 11, 12,  9, 10,  9,
   8,  9,  9, 12,  9,  9, 10,  9,  4,  6,  4,                 10,
   5, 10,  9, 10, 10,  9,  9,  9,  4,  7,  9,  6,  7,  5,  5, 10,
  10, 11, 10, 10, 12, 12, 12, 13, 12, 12, 11, 16,
  //#0E80~#0EFF ( 67) Lao
      12, 12,     12,          9, 12,     11,         12,
                  12, 14, 12, 14,     12, 12, 12, 14, 14, 14, 14,
      12, 12, 12,     12,     12,         12, 14,     12, 12, 10,
   8,  8,  8,  9, 10, 11, 10, 11,  6,  6,     10, 10, 10,
   8, 14,  8,  8,  6,     10,      4, 10, 10,  6,  8,  6,
  12, 12, 10, 12, 11, 11, 14, 12, 12, 14,         20, 20, 10, 10,
  //#0F00~#0FFF (211) Tibetan
  13, 10, 12, 13, 15,  9, 15, 19,  8,  7, 14,  4,  4,  5,  7,  6,
   5,  6, 14, 14,  6, 12, 12, 19, 17, 16,  6,  8,  8,  6, 10,  9,
   8,  8, 10, 10, 10, 10,  9, 11,  9,  8, 10,  9, 10,  9, 10, 10,
  10, 10, 10, 10,  7, 16, 10, 16, 10, 12, 21, 21, 16, 15, 16, 16,
  11, 10, 11, 10, 10,  9, 10,  9,      8,  8,  8,  8,  9,  8,  8,
   9, 10, 10,  8,  9,  9,  9,  9, 10, 11, 11, 10, 11, 10, 10,  9,
  10, 10, 10, 10, 11,  9, 10,  9, 12, 11, 10, 18, 18,
      17, 11, 17, 16, 18, 17, 18, 17, 18, 10, 10, 13, 13, 10, 13,
  11, 17, 10, 10, 10,  8, 16, 16, 10, 10, 10, 10,  9, 10, 10, 10,
  17, 16, 17, 16, 16, 16, 16, 16,     16, 16, 16, 16, 16, 16, 16,
  16, 16, 16, 16, 16, 16, 16, 16, 16, 18, 17, 17, 17, 16, 16, 16,
  16, 17, 16, 17, 17, 17, 16, 16, 19, 18, 17, 17, 16,     12, 12,
   9,  7, 10, 16, 10, 10, 21, 18, 12, 13, 14, 14, 14,     10, 10,
  21,  7, 18, 18, 18, 14, 14, 14, 14, 15, 15,
  //#10A0~#10FF ( 88) Georgian
  12, 12, 12, 12, 10, 13, 12, 13,  9, 10, 13, 12, 10, 12, 12, 11,
  12, 10, 10, 12, 12, 12, 10, 10, 10, 10, 10, 13, 10, 12, 10, 13,
  12, 10, 11, 10, 11, 14,      8,                     10,
   8, 10, 10, 14,  9, 10, 12, 14, 10, 10, 16,  9, 10, 12, 10,  9,
  12,  9, 14, 13, 12,  8, 12,  9,  9,  8, 10,  9, 10, 10,  9, 13,
  10, 11, 10, 10,  8, 10, 14,  8,  8, 10, 12,  7,  8, 10, 10, 10,
  //#1400~#167F (640) Unified Canadian Aboriginal Syllabics
   8, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 14, 14, 14, 14,
  14, 14, 15, 14, 14, 14, 12, 15, 15, 15, 15, 12,  8,  8,  8,  5,
   5,  8,  8,  6,  8,  8,  5,  4,  6,  8,  8, 15, 12, 12, 15, 12,
  12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 14, 14, 14, 14, 14, 14,
  12, 14, 12, 14, 15, 12, 15, 12, 12,  8,  4,  6, 12, 12, 12, 12,
  12, 12, 12, 12, 12, 12, 12, 14, 14, 14, 14, 14, 14, 12, 15, 12,
  15, 15, 12, 15, 12, 15,  8, 14, 14, 14, 14,  8,  8,  8,  8,  8,
   8,  8,  8,  8, 10, 10, 10, 10, 10, 10, 10,  8, 10, 10, 10, 10,
  10, 11, 10,  6,  6, 10, 10, 10, 10,  8,  8,  8,  8,  8,  8,  8,
   8,  8, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
  10,  6,  6, 12, 12, 12, 12, 12, 13, 13, 12, 13, 12, 15, 15, 12,
  15, 12, 12, 15, 13, 14, 15, 12, 15, 13, 15,  8,  6,  8,  6,  8,
  12, 12, 12, 12, 12, 12, 12, 12, 12, 14, 14, 15, 14, 15, 14, 15,
   8,  8,  8, 12, 12, 12, 12, 12, 12, 12, 12, 12, 14, 15, 15, 14,
  15, 14, 14, 15, 14, 15, 15, 14, 15, 14,  8,  8, 12,  8,  8,  8,
   8,  8,  8,  8,  8,  8, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
  10, 10, 10, 10, 10,  6,  6,  6,  8,  6,  6,  6, 16, 16, 12, 12,
  11, 11, 11, 12, 12, 12, 12, 14, 11, 14, 14, 14, 14, 14, 14, 14,
  14, 14, 14, 14, 14,  8, 12, 12, 11, 12, 12, 11, 12, 11, 11, 13,
  14, 14, 13, 14, 13, 14, 14, 14, 14, 14, 13, 14, 13, 14,  8,  8,
   8,  8, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 14, 14,
   7,  8, 12, 11, 11, 11, 11, 12, 12, 12, 12, 15, 15,  8, 12, 12,
  12, 12, 12, 12, 12, 12, 12, 12, 15, 14,  8, 12, 12, 12, 12,  7,
  12, 12, 12, 12, 10, 10, 10, 10, 10, 10, 10,  7, 10,  8, 12, 12,
  12, 12, 13, 12, 12, 10, 10, 10, 10, 10, 10, 10, 10, 10, 14, 14,
  14, 10, 10, 14, 14,  8, 14, 10, 10, 10, 10, 12, 12, 12, 12,  8,
  12, 12, 12, 12, 12, 12,  8, 14, 14, 14, 14, 14, 14, 14,  8, 10,
   9,  9,  9,  9, 12, 12, 12, 12, 10, 10, 10, 10, 12, 12, 12, 12,
  10, 10, 10, 10, 12, 12, 13, 13, 13, 12, 12, 12, 12, 12, 12, 12,
  12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
  12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,  8, 12,
  12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
  12,  8, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
  13, 13, 13, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
  12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 14, 14, 14, 14, 12, 12,
  12, 12, 12, 12, 12, 12, 14, 14, 14, 14, 12, 12, 14, 14, 14, 14,
  12, 12, 12, 12, 12, 12,  8,  8, 12, 12, 12, 12, 12, 12, 13, 13,
  12, 12, 12, 12, 13, 13, 12, 12, 12, 12,  6, 12, 12, 12, 12, 12,
  12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,  8, 13,
  16, 20, 20, 19, 19, 20, 20, 10, 10, 10, 10, 10, 10, 10,  6,  6,
  //#1D00~#1D7F (128) Phonetic Extensions
  10, 12, 12, 11,  9, 10, 10, 10,  8,  6,  9, 11, 10, 10, 11, 10,
   9, 10, 10, 14, 14,  8, 10, 10,  9, 10, 10,  9, 12, 10, 11, 10,
  10, 12,  8,  8,  8, 10,  8, 10, 10,  9, 12, 10, 10, 12, 10, 11,
  10, 10, 10, 10, 11,  6,  9, 11, 10, 10, 11, 11, 10,  8,  9, 10,
   9, 12, 12,  7,  7,  8, 10,  8,  8,  8,  8,  7,  7,  8,  6, 10,
  12,  8,  8,  8,  8,  8,  8,  8,  9,  8, 12,  8,  8,  8,  9,  8,
   8, 10,  6,  8,  9,  8,  8,  9,  8,  8, 10, 14, 11, 11, 10, 16,
  14, 11, 11,  9,  9,  9,  8, 10,  8,  9, 17,  8,  8, 12, 12, 12,
  //#1DC0~#1DFF ( 63) Combining Diacritical Marks Supplement
   7,  7,  7,  8, 10, 10, 10, 10, 10, 10,  8,  9,  9, 16,  6,  6,
   9,  8,  5,  7,  7,  7,  7,  5,  6,  6,  6,  6,  6,  5,  5,  7,
   6,  6,  6,  6,  5,  5,  5,  7,  7,  6,  5,  5,  5,  6,  6,  6,
   7,  7,  6,  6,  7,  5,  7,  7,  5, 16,      8, 16,  7,  6, 10,
  //#1F00~#1FFF (233) Greek Extended
  10, 10, 10, 10, 10, 10, 10, 10, 12, 12, 13, 13, 13, 13, 14, 14,
   8,  8,  8,  8,  8,  8,         13, 13, 14, 14, 14, 14,
   8,  8,  8,  8,  8,  8,  8,  8, 13, 13, 14, 14, 15, 15, 16, 16,
   4,  4,  6,  6,  6,  6,  7,  7,  6,  6,  8,  8,  9,  9,  8,  8,
  10, 10, 10, 10, 10, 10,         13, 14, 15, 15, 15, 15,
   8,  8,  8,  8,  8,  8,  8,  8,     15,     16,     16,     17,
  12, 12, 12, 12, 12, 12, 12, 12, 13, 14, 15, 15, 15, 15, 16, 16,
  10, 10,  8,  8,  8,  8,  4,  4, 10, 10,  8,  8, 12, 12,
  10, 10, 10, 10, 10, 10, 10, 10, 12, 12, 13, 13, 13, 13, 14, 14,
   8,  8,  8,  8,  8,  8,  8,  8, 13, 13, 14, 14, 15, 15, 16, 16,
  12, 12, 12, 12, 12, 12, 12, 12, 13, 14, 15, 15, 15, 15, 16, 16,
  10, 10, 10, 10, 10,     10, 10, 12, 12, 12, 12, 12,  4,  6,  4,
   7,  7,  8,  8,  8,      8,  8, 13, 13, 13, 13, 10,  6,  6,  7,
   6,  8,  8,  8,  7,          7,  7,  7,  6,  6,      6,  6,  7,
   8,  8,  8,  8, 10, 10,  8,  8, 12, 12, 14, 14, 13,  8,  8,  4,
          12, 12, 12,     12, 12, 13, 13, 13, 13, 12,  4,  4,
  //#2000~#206F (71) General Punctuation
   6,  6, 10, 10, 18, 10,  6, 10,  4,  4,  4,  4,  6,  6,  6,  6,
  10, 10,  6,  6,  4,  8, 14,  4,
  16, 20,  4,  6,  8,  4,  6,  8,  6,  5,  5, 14,  7, 10, 10, 16,
  16,  6, 13,  6, 10,  5,  5, 14, 12, 11,  9, 10, 10, 10,  8,  4,
  14,  8, 10, 10, 14, 10,  8, 13,  8,  8,  4, 10, 10,  4,  4,
  //#2070~#209F ( 42) Superscripts and Subscripts
   8,  6,          8,  8,  8,  6,  6,  8,  6,  6,  6,  6,  5,  6,
   8,  5,  8,  8,  8,  8,  8,  6,  6,  8,  6,  6,  6,  6,  5,
   7,  8,  8,  8,  8,  7,  7,  4, 10,  7,  8,  6,  6,
  //#20D0~#20FF ( 33) Combining Diacritical Marks for Symbols
  10, 10,  4,  4, 12, 12, 10, 10,  8,  8,  8,  8, 10, 14, 13, 16,
  14, 12, 14, 14, 13, 10,  6, 12, 10, 12, 12, 10, 11, 11, 11, 11,
   7,
  //#2190~#21FF (112) Arrows
  12,  8, 12,  8, 12,  8, 10, 10, 10, 10, 12, 12, 12, 12, 12,  8,
  12,  8, 12, 12, 12,  8, 12,  8,  8, 12, 12, 12, 12, 14, 14,  8,
   9,  9,  9,  9, 10,  9, 11, 11, 10, 12, 12, 12, 12, 12,  6,  6,
  12, 12,  6,  6, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 16, 12,
  12,  9, 12,  9, 14,  9, 11, 11, 11, 11, 12, 12, 14, 14,  8,  8,
  12,  8, 12,  8, 12, 12, 12,  9, 12,  9,  9, 12, 12, 12, 12, 12,
  18, 16, 16, 12, 18, 12, 18, 16, 16, 18, 14, 14, 20, 16, 16, 20,//done
  //#2200~#22FF (256) Mathematical Operators
  11, 10, 10,  8,  8, 13, 12, 12, 10, 10,  8, 10, 10,  8,  8, 14,
  14, 12, 10, 10, 10, 12,  8,  8,  6,  6, 10, 10, 10,  8, 10, 10,
  10, 10,  9,  4,  6,  6,  8, 10, 10, 10, 10,  8, 12, 17,  9, 13,
  17, 10, 10, 10,  8,  8,  4,  6, 10, 10, 10, 10, 10, 10, 10, 10,
   4, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
  10, 10, 10, 10, 12, 12, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
  10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 16, 16,  6, 10, 10, 10,
  10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
  10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 10, 10, 10, 11,
  11, 11, 11, 10, 10, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
  11, 10, 10,  8,  8, 13, 12, 12, 10, 10,  8, 10, 10,  8,  8, 14,
  10, 10, 10, 10, 10, 10, 12, 12, 12, 10,  8, 10, 10, 10, 10, 10,
  10, 10, 10, 10,  6,  4, 10, 12, 11, 11, 11, 11, 11, 10, 10, 10,
  11, 11, 10, 10, 10, 10, 10, 10, 20, 20, 10, 10, 10, 10, 10, 10,
  10, 10, 11, 11, 11, 11, 10, 10, 10, 10, 10, 10, 10, 10,  4,  8,
   8,  8, 12, 11, 10, 11, 11, 10, 11, 11, 12, 11, 10, 11, 10, 10,
  //#2300~#23FF (256) Miscellaneous Technical
   9, 16, 10,  7,  7,  8,  8,  6,  6,  6,  6,  6,  8,  8,  8,  8,
  10,  8, 12, 12, 10,  9, 10, 12, 12, 10, 10,  8,  7,  7,  7,  7,
   6,  6, 12, 12, 16, 16, 15, 14, 14,  6,  7, 15,  9, 10,  8, 10,
  10,  9, 10, 10, 10, 10, 10,  8, 10, 10, 10, 10, 10,  8, 10,  9,
   9, 10, 10, 10, 10, 11, 10, 10, 10,  8, 10,  8, 10, 10, 10, 10,
  10, 10,  8, 10, 10, 10, 10, 10,  6, 10, 10, 10, 10, 10, 10, 10,
  10, 10,  8,  7,  8,  8, 10, 10, 10,  8,  7,  9,  9, 10,  7, 10,
  10, 10, 10,  7,  9, 10, 10, 10,  7, 10, 10, 13, 12, 18, 16,  6,
  14, 14, 14, 16, 20, 14, 19, 16, 18, 17, 17, 17, 15, 14, 14, 18,
  18, 18, 18, 18, 14, 10,  8, 16, 16, 20, 20,  7,  5,  7,  7,  5,
   7,  7,  4,  7,  7,  4,  7,  6,  7,  6,  4,  7,  6,  7,  4, 18,
   9,  9, 16, 16, 14, 14, 14, 10,  4,  4, 10, 10, 10, 10,  8,  8,
  12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,  8,  8, 16, 14, 13,
   4,  9,  9,  9, 16, 16, 15, 12, 12, 12, 12, 16, 18, 18, 18, 17,
  16, 16, 13, 14, 14, 16, 16, 14, 11, 12, 12, 12, 12, 14, 14, 13,
  14, 14, 14, 12,  8,  8, 12, 12,  7, 11, 11, 14, 15,  4, 14, 17,
  //#2440~#245F ( 11) Optical Character Recognition
   8,  8,  8,  8,  8,  8,  9, 10, 10, 10, 10,
  //#2460~#24FF (160) Enclosed Alphanumerics
  14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
  14, 14, 14, 14, 11, 14, 14, 13, 14, 13, 13, 14, 14, 14, 13, 14,
  14, 14, 14, 14, 14, 14, 14, 14,  6,  9,  9,  9,  9,  9,  9,  9,
   9, 12, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 14, 13, 13, 13,
  14, 12, 13, 12, 10, 11, 13, 10, 14, 12, 14, 13, 13, 12, 12, 12,
  12, 14, 14, 14, 14, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
  14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
  14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
  14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 16, 16, 16, 17, 16,
  16, 17, 16, 17, 16, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 17,
  //#2500~#257F (128) Box Drawing
  12, 12,  4,  5, 11, 11,  4,  5, 10, 10,  4,  5,  8,  8,  9,  9,
   8,  8,  8,  8,  8,  8,  9,  9,  8,  8,  8,  8,  8,  8,  9,  9,
   9,  9,  9,  9,  8,  8,  8,  8,  8,  8,  8,  8, 12, 12, 12, 12,
  12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
  12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,  4,  5,
  12,  6,  8,  9,  9,  8,  9,  9,  8,  9,  9,  8,  9,  9,  8,  9,
   9,  8,  9,  9, 12, 12, 12, 12, 12, 12, 12, 12, 12,  8,  8,  8,
   8, 12, 12, 12,  7,  4,  7,  4,  7,  5,  7,  5, 12,  5, 12,  5,
  //#2580~#259F ( 32) Block Elements
  12, 12, 12, 12, 12, 12, 12, 12, 12, 11,  9,  8,  7,  6,  5,  4,
   7,  9, 12, 12, 12,  4,  9,  9,  9, 16, 16, 16, 16,  9, 16, 16,
  //#25A0~#25F0 ( 96) Geometric Shapes
   9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  6,  6,  9,  9,  6,  6,
  10, 10,  9,  9,  8,  8,  9,  9,  7,  7, 10, 10,  9,  9,  8,  8,
   9,  9,  7,  7,  9,  9, 10, 10, 10,  9,  9,  9,  9,  9,  9,  9,
   9,  9,  9,  9,  9,  6,  6, 12, 12, 12, 12,  6,  9,  5,  5,  6,
   9,  9,  9,  9,  9,  9,  6,  9,  9,  9,  9,  9,  9,  9,  9, 11,
  12, 12, 12, 12, 14, 14, 14, 14, 13, 12, 13, 12, 12, 10, 10, 14,
  //#2600~#26FF (256) Miscellaneous Symbols
  12, 16, 12, 10, 15, 12, 14,  6,  8, 12, 12, 12,  9, 12, 12, 12,
  12, 12, 12, 10, 12, 12, 16, 16, 14, 16, 16, 16, 14,  8, 15,  8,
  12, 10, 12, 12, 10,  8,  8, 10,  8, 12, 12, 13, 10, 12, 12, 12,
  14, 14, 14, 14, 14, 14, 14, 14, 12, 12, 12, 12, 11, 10, 10,  8,
  10, 10, 12, 10,  9, 10, 12,  8, 14, 12, 12, 14, 12, 16, 14, 17,
  12, 14, 15, 12, 14, 16, 12, 14, 14, 12, 14, 16, 12, 14, 14, 12,
  12, 12, 10, 12, 12, 12, 10, 13, 14,  7, 10, 11, 11,  7,  6,  8,
  14, 14, 16, 18, 18, 18, 18, 18, 18, 18, 18, 16, 16, 16, 16, 12,
  12, 14, 12, 12, 14, 12, 14, 12, 12, 14, 12, 12, 12, 12, 12, 12,
  14, 14, 14, 14, 12, 13, 12, 12, 12, 14,  8, 16, 14, 16, 13, 13,
  10, 12, 13, 14, 11, 11, 18, 14,  9, 13,  8,  8,  8, 12, 18, 18,
  16, 10,  8,  8,  8,  8, 16,  8,  8, 10, 10, 10, 11, 16, 16, 16,
  14, 14, 14, 14, 12, 16, 16, 16, 16, 12, 12, 16, 10, 16, 16, 16,
  16, 16, 16, 14, 16, 14, 16, 16, 14, 14, 16, 16, 16, 16, 16, 16,
  16, 16, 11, 12, 14, 14, 14, 14, 12, 16, 16, 14, 14, 14, 16, 14,
  16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 14, 16, 16, 16, 14,
  //#2700~#27BF (192) Dingbats
  18, 15, 16, 15, 17, 14, 12, 14, 14, 12, 13, 12, 10, 14, 14, 15,
  14, 16, 16, 13, 14, 12, 12, 11, 12, 12, 13, 12, 12,  9, 10, 10,
  10, 12, 13, 13, 13, 13, 13, 14, 16, 14, 13, 14, 14, 14, 14, 14,
  14, 12, 12, 12, 13, 13, 12, 13, 13, 14, 13, 12, 12, 12, 12, 14,
  14, 13, 13, 12, 12, 12, 12, 13, 13, 12, 12, 14, 12, 14, 13, 14,
  14, 13, 13, 12, 12,  8, 13,  6,  4,  6,  8,  6,  6, 12, 12,  8,
  12, 11,  8, 10, 14, 12, 12, 14,  7,  7,  8,  8,  8,  8, 10, 10,
   8,  8,  6,  6,  7,  7, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13,
  13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13,
  13, 13, 13, 13, 15, 13, 13, 13, 11, 16, 10, 16, 15, 14, 14, 14,
  14, 14, 15, 15, 14, 16, 16,  8, 15, 14, 14, 14, 14, 12, 12, 15,
  14, 15, 14, 16, 12, 14, 13, 12, 15, 12, 14, 14, 14, 16, 15, 20,
  //#2900~#297F	(128) Supplemental Arrows-B
  18, 18, 16, 16, 17, 18, 16, 16,  8,  8, 12, 12, 17, 17, 18, 18,
  18, 18,  8,  8, 16, 16, 18, 18, 18, 16, 16, 20, 20, 19, 19, 18,
  19, 14, 14, 12, 12, 12, 12, 16, 14, 16, 14, 12, 12, 14, 14, 14,
  14, 16, 16, 18, 14, 14, 12, 12, 10, 10, 20, 20, 20, 20, 12, 12,
  14, 14, 18, 18, 18, 18, 18, 19, 18,  8, 18, 18,  8,  8, 18,  6,
  18,  6, 19, 19, 10, 10, 19, 19, 10, 10, 18, 18, 10, 10, 18, 18,
  10, 10, 18, 10, 18, 10, 18, 18, 18, 18, 18, 18, 18, 18, 10, 10,
  16, 18, 18, 18, 18, 18, 16, 18, 16, 16, 18, 16, 17, 17, 12, 12,
  //#2B00~#2BFF	(252) Miscellaneous Symbols and Arrows
  14, 14, 14, 14, 18, 16, 12, 12, 14, 14, 14, 14, 18, 12, 14, 14,
  14, 14, 12, 12, 12, 12, 14, 14, 14, 14, 12, 16, 16,  8,  8, 14,
  14, 12, 12, 14, 16, 12, 12,  8,  8,  9,  8,  8, 14, 14, 11, 12,
  18, 18, 22, 22, 18, 18, 18, 18, 18, 16, 16, 18, 18, 18, 18, 18,
  18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 12,  8,  8,
  10,  8,  8, 14, 14, 16, 17, 14, 14, 14, 12, 12, 12, 12, 10, 10,
  14,  8, 14,  8, 14,  8, 10, 10, 10, 10, 14,  8, 13,  8, 13, 13,
  14,  8, 14,  8,         12, 12, 12, 12, 14,  8, 13,  8, 14, 14,
  14, 14, 14, 14, 14, 14, 14, 14, 13, 14, 13, 14, 14, 14, 13, 14,
  14, 14, 14, 13, 16, 16,     10, 12, 14, 12, 14, 12, 14, 12, 14,
  14, 13, 14, 13, 10, 10, 10, 10, 13, 14, 13, 14, 10, 10, 10, 10,
  14, 13, 14, 13, 16, 16, 16, 16, 12, 16, 16, 16, 16, 14, 14, 14,
  10, 14, 14, 14, 14, 12, 12, 10, 10,     14, 14, 13, 10, 14, 10,
  14, 14,  8, 14, 14, 15, 15, 10, 13, 14, 12, 10, 10,  8, 10, 11,
  14, 12, 10, 14, 14, 10, 10, 16,  8,  8, 14, 14, 14,  8, 14,  8,
  11, 10, 13, 12, 15, 16, 12, 12, 12, 16, 18, 22, 10, 12, 12,  9,
  //#3000~#303F ( 64) CJK Symbols and Punctuation
  12,  6,  6,  8, 15, 11, 12, 15,  7,  7,  9,  9,  8,  8,  9,  9,
   7,  7, 12, 12,  7,  7,  7,  7,  6,  6,  6,  6, 16,  8,  8,  8,
  14,  4,  8, 10, 11,  9, 12, 12, 12, 11,  7,  7,  7,  7,  5,  5,
  14,  8, 12, 10, 13,  9, 15, 14, 16, 16, 16,  7, 12, 12, 16, 10,
  //#3040~#309F ( 93) Hiragana
      13, 14, 11, 14, 11, 13, 12, 14, 12, 14, 14, 15, 13, 15, 12,
  14, 13, 15, 13, 14, 13, 14, 12, 13, 14, 14, 14, 16, 14, 15, 14,
  14, 12, 14, 11, 14, 14, 14, 14, 12, 13, 14, 14, 14, 14, 14, 14,
  14, 15, 14, 14, 15, 15, 14, 15, 14, 14, 14, 14, 14, 15, 14, 14,
  14, 14, 14, 12, 14, 12, 14, 12, 14, 13, 12, 13, 14, 13, 12, 14,
  14, 14, 13, 14, 15, 12, 12,          6,  6,  6,  6, 12, 12, 11,
  //#30A0~#30FF ( 96) Katakana
  10, 12, 15, 10, 12, 11, 14, 12, 14, 11, 15, 14, 14, 14, 14, 12,
  14, 14, 14, 14, 14, 14, 15, 14, 14, 14, 15, 14, 14, 12, 12, 13,
  15, 14, 14, 10, 13, 14, 14, 15, 10, 10, 14, 14, 12, 14, 12, 14,
  15, 15, 12, 13, 15, 12, 14, 15, 14, 14, 14, 14, 14, 14, 14, 14,
  14, 12, 14, 10, 14, 12, 15, 10, 13, 14, 12, 14, 13, 14, 10, 14,
  14, 14, 14, 13, 14, 11, 12, 15, 16, 15, 14,  5, 14,  9,  9, 10,
  //#3300~#33FF (256) CJK Compatibility
  16, 16, 16, 16, 15, 16, 15, 16, 16, 16, 16, 15, 16, 16, 15, 16,
  16, 16, 16, 16, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
  16, 16, 16, 16, 16, 16, 14, 14, 15, 13, 15, 17, 16, 16, 16, 16,
  15, 15, 16, 15, 16, 16, 16, 15, 16, 16, 16, 16, 16, 15, 16, 16,
  16, 16, 16, 16, 15, 13, 16, 16, 16, 14, 16, 15, 16, 16, 16, 16,
  16, 15, 14, 15, 16, 15, 15, 12, 15, 14, 15, 15, 16, 15, 15, 15,
  15, 15, 16, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
  16, 15, 16, 15, 15, 16, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16,
  15, 15, 15, 15, 15, 15, 15, 16, 15, 16, 15, 15, 15, 14, 15, 14,
  15, 15, 16, 16, 16, 14, 14, 16, 15, 14, 14, 14, 16, 15, 14, 16,
  16, 14, 15, 16, 16, 14, 15, 16, 16, 15, 16, 16, 16, 16, 16, 16,
  15, 15, 15, 15, 15, 15, 15, 16, 15, 16, 15, 15, 15, 16, 15, 16,
  15, 16, 16, 14, 16, 16, 16, 16, 16, 16, 15, 15, 10, 15, 15, 13,
  13, 10, 15, 11, 15, 12, 16, 14, 16, 16, 15, 12, 16, 16, 16, 16,
  12, 14, 14, 15, 14, 14, 14, 14, 14, 15, 13, 15, 15, 15, 15, 15,
  15, 15, 15, 15, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 14, 16,
  //#A000~#A48F (1165) Yi Syllables
  12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
  12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
  12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 10, 10,
  12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 11, 12, 12, 12, 12,
  12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 11, 11, 12, 12, 12,
  12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
  12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
  12, 12, 12, 12, 12, 12, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12,
  12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
  12, 12, 12, 12, 12, 12, 12, 10, 12, 12, 12, 12, 12, 12, 12, 12,
  12, 12, 10, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
  12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
  12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
  12, 12, 12, 12, 12, 12, 12, 12, 10, 12, 12, 12, 12, 12, 12, 12,
  12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
  12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
  12, 12, 12, 12, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
  12, 12, 12, 12, 12, 12, 12, 11, 12, 12, 12, 12, 12, 12, 12, 12,
  12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
  12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
  12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
  12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
  12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
  12, 12, 12, 12, 12, 12, 12, 12, 12, 11, 11, 12, 12, 12, 12, 12,
  12, 12, 12, 12, 12, 12, 12, 12, 12, 11, 12, 12, 12, 12, 12, 12,
  12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
  11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 10, 10, 12, 12,
  12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 10, 10, 12, 11,
  12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
  12, 12, 12, 12, 12, 12, 12, 12, 10, 10, 12, 12, 12, 12, 12, 12,
  12, 12, 12, 12, 12, 12, 12, 11, 11, 12, 12, 12, 12, 12, 12, 12,
  12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
  12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,  8, 12, 12, 12,
  12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
  12, 12, 12, 12, 12, 12, 12, 12,  8, 12, 12, 12, 12, 12, 12, 12,
  12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
  12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
  12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
  12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 11, 12, 12,
  12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
  12, 12, 12, 12, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
  12, 12, 12, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
  12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 11, 12, 12, 12, 12,
  12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
  12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
  12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 11,
  11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 10, 12, 12, 12, 12, 12,
  10, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
  12, 12, 12, 10, 12, 12, 12, 12, 12, 12, 12, 12, 11, 12, 12, 12,
  12, 12, 12, 12, 12, 12, 12, 10, 12, 12, 10, 12, 12, 12, 12, 12,
  12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
  12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
  11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
  12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
  11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
  12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 11, 11, 12, 12,
  12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 11, 12, 12, 12, 10,
  10, 12, 12, 12, 12, 12, 12, 10, 12, 12, 12, 12, 12, 12, 12, 12,
  12, 12, 12, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
  12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 11, 11, 12, 12, 12,
  12, 10, 10, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
  12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
  12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
  12, 10, 10, 12, 12, 12, 12, 12, 11, 12, 12, 12, 12, 12, 12, 12,
  12, 12, 12, 12, 12, 12, 12, 12,  8, 12, 12, 12, 12, 12, 12, 12,
  12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
  12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
  12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 11, 12, 12, 12, 12,
  12, 12, 12, 12, 10, 12, 12, 12, 12, 12, 10, 12, 12, 12, 12, 12,
  12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
  12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
  12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
  12, 12, 12, 12, 12, 12, 12, 12, 10, 10, 12, 12, 12,
  //#A490~#A4C6 ( 55) Yi Radicals
   4, 12, 12, 12, 12, 12, 12, 12, 12, 12, 10,  8, 12, 12, 12,  8,
  12, 12, 12, 12, 12, 12, 12, 12, 12,  8, 12, 12, 12, 12, 12, 10,
  10, 10,  8, 12, 12, 12, 12, 12, 11, 12, 12, 10, 12, 12, 12, 12,
  12, 12, 12, 12, 12, 12,  6,
  //#FE30~#FE4F ( 32) CJK Compatibility Forms
   4,  4,  4,  4,  5, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
  16, 16, 16, 16, 16,  8,  8, 16, 16, 13, 14, 18, 18, 13, 14, 18,
  //#FF00~#FFEF (225) Halfwidth and Fullwidth Forms
       4,  6, 10, 10, 14, 11,  4,  6,  6,  8, 10,  4,  6,  4,  6,
  10, 10, 10, 10, 10, 10, 10, 10, 10, 10,  4,  4, 10, 10, 10, 10,
  16, 12, 10, 12, 12, 10, 10, 12, 10,  4,  8, 11,  9, 12, 10, 12,
  10, 12, 11, 10, 10, 10, 12, 16, 12, 12, 10,  6,  6,  6,  8, 10,
   5,  9, 10, 10, 10, 10,  7, 10,  8,  4,  6,  8,  4, 12,  8, 10,
  10, 10,  6,  8,  6,  8, 10, 12,  8, 10,  8,  6,  4,  6, 10,  8,
   8,  5,  8,  8,  6,  4,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,
   8,  9,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,
   8,  8,  8,  8,  7,  8,  8,  8,  9,  8,  8,  8,  8,  8,  8,  8,
   8,  8,  8,  8,  8,  8,  8,  8,  7,  8,  7,  8,  8,  8,  5,  5,
   1,  8, 10,  9,  8, 10, 10,  8,  9,  8,  8,  9,  9,  9,  8,  8,
   9,  8,  8,  9,  9,  8, 10,  8,  8, 10,  8,  8,  8,  8,  8,
           6,  8,  7,  8,  6,  8,          7,  8,  8,  8,  8,  8,
           8,  8,  8,  9,  8,  8,          8,  8,  4,
  10, 10, 10, 10,  4, 10, 16,      4,  8,  6,  8,  7,  8,  8,
  //#1F300~#1F5FF (768) Miscellaneous Symbols and Pictographs
  10, 16, 14, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 18, 18, 18,
  18, 14, 15, 14, 16, 15, 15, 15, 16, 14, 15, 12, 12, 16, 16, 16,
  16,  8, 10, 16, 18, 18, 18, 18, 18, 18, 18, 12, 18, 16, 16, 16,
  16, 15, 10, 10, 14, 16, 14, 14, 16, 14, 16, 13, 16, 16, 15, 15,
  16, 16, 15, 15, 16, 15, 16, 14, 14, 16, 16, 14, 16, 16, 14, 14,
  12, 15, 16, 15, 17, 16, 16, 16, 16, 16, 16, 16, 14, 16, 16, 15,
  16, 14, 14, 18, 12, 16, 10, 16, 14, 17, 16, 16, 16, 12, 16, 12,
  16, 16, 16, 16,  9, 16, 14, 12, 13, 13, 14, 16,  8, 16, 14, 11,
  18, 16, 16, 16, 16, 16, 16, 16, 12, 16, 16, 17, 16, 14, 17, 17,
  10, 16, 14, 16, 16, 16,  9, 10, 16,  8, 10, 10, 13, 13, 14, 16,
  16, 15, 14, 16, 16, 12, 14, 16, 16, 16, 16, 17, 16, 18, 17, 16,
  17, 16, 13, 16, 12, 13, 16, 16, 16, 16, 16, 16, 16, 12, 16, 16,
  12, 16, 12, 16, 12,  8, 15, 17, 16, 15, 16, 14, 10, 14, 19, 16,
  14, 14, 14, 13, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
  16, 16, 13, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 10, 16,
  14, 16, 16, 12, 12, 14, 14, 16, 14, 12, 12, 16, 16, 16, 16, 16,
  19, 14, 18, 18, 17, 18, 20, 16, 14, 16, 18, 16, 16, 16, 18, 16,
  13, 14, 16, 14, 10, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
  16, 16, 16, 16, 14, 14, 16, 12, 14, 15, 16, 18, 16, 16, 19, 12,
  16, 17, 16, 16, 16, 18, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
  14, 16, 10, 14, 14, 14, 10, 10, 16, 16, 15, 14, 13, 10, 10, 17,
  16, 16, 16, 16, 14, 16, 10, 12, 16, 10, 14, 16, 16, 16, 16, 16,
  16, 16, 12, 12, 14, 14, 17, 17, 16, 18, 16, 11, 12, 12, 16, 16,
  17, 18, 17, 17, 18, 17, 16, 18, 18, 16, 16, 16, 16, 15, 16, 14,
  14, 16, 14, 10, 14, 16, 16, 16, 10, 16, 16, 17, 16, 14, 17, 20,
  14, 20, 16, 16, 17, 16, 16, 16, 16, 16, 16, 16, 16, 17, 16, 16,
  16, 17, 16, 16, 16, 16, 16,  7, 16, 14, 18, 18, 16, 16, 16, 16,
  16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 14, 18, 16, 16, 16, 16,
  16, 12, 14, 14, 12, 16, 16, 16, 16, 16, 16, 12, 16, 15, 16, 16,
  16, 16, 14, 12, 13, 14, 16, 18, 18, 18, 16, 16, 16, 16, 16, 17,
  16, 14, 16, 16, 16, 16, 16, 16, 16, 14, 12, 14, 16, 14, 16, 16,
  14,  9, 16, 16, 16, 14, 15, 16, 18, 17, 14, 16, 18, 16, 16, 10,
  15, 14, 14, 16, 16, 11, 10, 16,  8, 11, 14, 16, 14, 16, 16, 16,
  16, 15, 14, 16, 14, 14,  8, 16, 16, 16, 16, 14, 16, 14, 16, 16,
  16, 16, 16, 16, 16, 16, 16, 16, 15, 17, 16, 17, 10, 14, 13, 15,
  12, 16, 16, 16, 16, 16, 15, 15, 12, 12, 14, 14, 10, 10, 14, 14,
  14, 14, 14, 14, 14, 16, 12, 10, 10, 14, 16, 18, 12, 12, 14, 16,
  14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
  14, 14, 14, 14, 14, 14, 14, 14,  8, 11, 14, 13, 17, 14, 18,  7,
  16, 10, 14, 14,  6, 14, 12, 12, 18, 12, 12,  6, 10,  7, 16, 16,
  12, 10, 16, 16, 16, 18, 15, 10, 14, 16, 16, 16, 16, 16, 16, 12,
  14, 14, 10, 10, 10,  8, 14,  8, 14, 14, 14, 14, 14, 14,  8,  8,
   8,  8,  9,  8, 16, 10, 18, 14, 14,  8, 14, 14, 14, 16, 16, 17,
  15, 17, 17, 16, 14, 16, 14, 14, 14, 12, 12, 12, 12, 14, 14, 14,
  16, 20, 18, 18,  8, 10, 10, 14, 10, 10, 14, 10, 10, 14, 10, 10,
  14, 10, 14, 14, 16, 10, 14, 14, 12, 12, 14, 14, 13, 14, 16, 16,
  12, 10, 14, 14, 10, 10,  7,  7, 16, 16, 18, 16, 16, 16, 17, 17,
  18, 18, 14, 16, 10, 14, 10, 14, 12, 15, 22, 18, 11, 16, 18, 14,
  //#1F600~#1F64F ( 80) Emoticons
  16, 16, 18, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
  16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
  16, 16, 16, 16, 14, 16, 16, 16, 16, 16, 16, 16, 14, 18, 16, 16,
  16, 18, 16, 16, 22, 16, 16, 16, 18, 18, 18, 17, 17, 17, 17, 17,
  17, 14, 14, 14, 15, 14, 16, 14, 16, 14, 14, 14, 14, 14, 14, 14,
};

std::string exfont_part_string[1024];
std::string exfont_font_samples[10240];
std::string exfont_font_right_to_left_samples[256];
std::string exfont_font_name[EXFONT_NUM_OF_FONT_NAME];
std::string exfont_ignore_chars = "\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u200B\u200C\u200D\u200E\u200F\uFE00\uFE01\uFE02\uFE03\uFE04\uFE05\uFE06\uFE07\uFE08\uFE09\uFE0A\uFE0B\uFE0C\uFE0D\uFE0E\uFE0F";
/*
   0 ~   95  (128) Basic latin
  96 ~  223   (96) Latin 1 supplement
 224 ~  319   (96) Ipa extensions
 320 ~  399   (80) Spacing modifier letters
 400 ~  511  (112) Combining diacritical marks
 512 ~  646  (135) Greek and coptic
 647 ~  902  (256) Cyrillic
 903 ~  950   (48) Cyrillic supplement
 951 ~ 1041   (89) Armenian
1042 ~ 1129   (88) Hebrew
1130 ~ 1384  (255) Arabic
1385 ~ 1512  (128) Devanagari
1513 ~ 1591   (79) Gurmukhi
1592 ~ 1663   (72) Tamil
1664 ~ 1759   (96) Telugu
1760 ~ 1847   (88) Kannada
1848 ~ 1937   (90) Sinhala
1938 ~ 2024   (87) Thai
2025 ~ 2091   (67) Lao
2092 ~ 2302  (211) Tibetan
2303 ~ 2390   (88) Georgian
2391 ~ 3031  (640) Unified canadian aboriginal syllabics
3032 ~ 3158  (128) Phonetic extensions
3159 ~ 3221   (63) Combining diacritical marks supplement
3222 ~ 3454  (233) Greek extended
3455 ~ 3525  (71) General punctuation
3566 ~ 3607   (42) Superscripts and subscripts
3608 ~ 3640   (33) Combining diacritical marks for symbols
3641 ~ 3752  (112) Arrows
3753 ~ 4008  (256) Mathematical operators
4009 ~ 4264  (256) Miscellaneous technical
4265 ~ 4275   (11) Optical character recognition
4276 ~ 4403  (128) Box drawing
4404 ~ 4435   (32) Block elements
4436 ~ 4531   (96) Geometric shapes
4532 ~ 4787  (256) Miscellaneous_symbols
4788 ~ 4979  (192) Dingbats
4980 ~ 5043   (64) Cjk symbol and punctuation
5044 ~ 5136   (93) Hiragana
5137 ~ 5232   (96) Katakana
5327 ~ 6491 (1165) Yi syllables
6492 ~ 6546   (55) Yi radicals
6547 ~ 6578   (32) Cjk compatibility forms
6579 ~ 6803  (225) Halfwidth and fullwidth forms
6804 ~ 7571  (768) Miscellaneous symbols and pictographs
*/
C2D_Image exfont_font_images[10240];

int exfont_font_characters[EXFONT_NUM_OF_FONT_NAME] = {
 128,  96,  96,  80, 112, 135, 256,  48,  89,  88,  255, 128, 79,  72,  96,  88,
  90,  87,  67, 211,  88, 640, 128,  63, 233,  71,  42,  33, 112, 256, 256,  11,
 160, 128,  32,  96, 256, 192, 128, 252,  64,  93,  96, 256, 1165, 55,  32, 225,
 768,  80,
};
int exfont_num_of_right_left_charcters = 0;
int exfont_font_start_num[EXFONT_NUM_OF_FONT_NAME];

void Exfont_init(void)
{
  int characters = 0;
  u8* fs_buffer;
  u32 read_size;
  std::string temp;
	std::string setting_data[128];
  Result_with_string result;
  fs_buffer = (u8*)malloc(0x8000);

	memset((void*)fs_buffer, 0x0, 0x8000);
	result = File_load_from_rom("font_name.txt", fs_buffer, 0x2000, &read_size, "romfs:/gfx/msg/");
	result = Sem_parse_file((char*)fs_buffer, EXFONT_NUM_OF_FONT_NAME, setting_data);
	for (int k = 0; k < EXFONT_NUM_OF_FONT_NAME; k++)
		Exfont_set_msg(k, setting_data[k]);

	memset((void*)fs_buffer, 0x0, 0x8000);
  result = File_load_from_rom("font_samples.txt", fs_buffer, 0x8000, &read_size, "romfs:/gfx/font/sample/");
  if(result.code == 0)
    Exfont_text_parse((char*)fs_buffer, exfont_font_samples, 10240, &characters);

  for(int i = characters; i > -1; i--)
    exfont_font_samples[i + 1] = exfont_font_samples[i];

	memset((void*)fs_buffer, 0x0, 0x8000);
  result = File_load_from_rom("font_right_to_left_samples.txt", fs_buffer, 0x8000, &read_size, "romfs:/gfx/font/sample/");
  if(result.code == 0)
    Exfont_text_parse((char*)fs_buffer, exfont_font_right_to_left_samples, 256, &characters);

  exfont_num_of_right_left_charcters = characters;

  exfont_font_samples[0] = "\u0000";
  exfont_font_start_num[0] = 0;
  for(int i = 1; i < EXFONT_NUM_OF_FONT_NAME; i++)
    exfont_font_start_num[i] = exfont_font_start_num[i - 1] + exfont_font_characters[i - 1];

  free(fs_buffer);

}

std::string Exfont_query_font_name(int exfont_num)
{
	if (exfont_num >= 0 && exfont_num < EXFONT_NUM_OF_FONT_NAME)
		return exfont_font_name[exfont_num];
	else
		return "";
}

void Exfont_set_msg(int msg_num, std::string msg)
{
	if (msg_num >= 0 && msg_num < EXFONT_NUM_OF_FONT_NAME)
		exfont_font_name[msg_num] = msg;
}

std::string Exfont_text_sort(std::string sorce_part_string[], int max_loop)
{
	int right_to_left_pos = -1;
	bool found = false;
	std::string result_string = "";
  std::string right_to_left_sample[2] = { "\u05BD", "\u0700", };

	for (int i = 0; i < max_loop; i++)
	{
		found = false;
		if (memcmp((void*)sorce_part_string[i].c_str(), (void*)exfont_font_samples[0].c_str(), 0x1) == 0)
			break;

    if(exfont_font_right_to_left_samples[201] == sorce_part_string[i])
      found = true;
    else if(sorce_part_string[i].length() == 2 && memcmp((void*)sorce_part_string[i].c_str(), (void*)right_to_left_sample[0].c_str(), 0x2) > 0
    && memcmp((void*)sorce_part_string[i].c_str(), (void*)right_to_left_sample[1].c_str(), 0x2) < 0)
    {
  		for (int j = 0; j < exfont_num_of_right_left_charcters - 1; j++)
  		{
  			if (memcmp((void*)sorce_part_string[i].c_str(), (void*)exfont_font_right_to_left_samples[j].c_str(), 0x2) == 0)
  			{
  				found = true;
  				break;
  			}
  		}
    }

		if (found)
    {
      if (right_to_left_pos <= -1)
        right_to_left_pos = result_string.length();

      result_string.insert(right_to_left_pos, sorce_part_string[i]);
    }
    else
		{
			result_string += sorce_part_string[i];
			right_to_left_pos = -1;
		}
	}
	return result_string;
}

void Exfont_text_parse(std::string sorce_string, std::string part_string[], int max_loop, int* out_element)
{
	int sorce_string_length = sorce_string.length();
	int std_num = 0;
	int parse_string_length = 0;
	int i = 0;
  *out_element = 0;
	char* sorce_string_char = (char*)malloc(sorce_string.length() + 10);

	memset(sorce_string_char, 0x0, sorce_string.length() + 10);
	strcpy(sorce_string_char, (char*)sorce_string.c_str());

	for(int k = 0;k < max_loop; k++)
	{
		parse_string_length = mblen(&sorce_string_char[i], 4);

		if (i >= sorce_string_length)
			break;
		else if (parse_string_length >= 1)
		{
			part_string[std_num] = sorce_string.substr(i, parse_string_length);
			i += parse_string_length;
			std_num++;
		}
		else
			i++;
	}
	part_string[std_num] = "\u0000";
	free(sorce_string_char);
  *out_element = std_num + 1;
}

void Exfont_draw_external_fonts(std::string in_string, float texture_x, float texture_y, float texture_size_x, float texture_size_y, float red, float green, float blue, float alpha, float* out_width, float* out_height)
{
  double interval_offset = 0.5;
  double x_offset = 0.0;
  double y_offset = 0.0;
  double x_size = 0.0;
  int block = -1;
  int char_size = 0;
  int characters = 0;
  int memcmp_result = 0;
  bool reverse = false;
  bool unknown = true;
  std::string sample_one_byte[1] = { "\u0080", };
  std::string samples_two_bytes[10] = { "\u0100", "\u02B0", "\u0300", "\u0370", "\u0400", "\u0500", "\u0530", "\u0590", "\u0600", "\u0700", };
  std::string samples_three_bytes[37] = { "\u0980", "\u0A80", "\u0C00", "\u0C80", "\u0D00", "\u0E00", "\u0E80", "\u0F00",
                                          "\u1000", "\u1100", "\u1680", "\u1D80", "\u1E00", "\u2000", "\u2070", "\u20A0",
                                          "\u2100", "\u2200", "\u2300", "\u2400", "\u2460", "\u2500", "\u2580", "\u25A0",
                                          "\u2600", "\u2700", "\u27C0", "\u2980", "\u2C00", "\u3040", "\u30A0", "\u3100",
                                          "\u3400", "\uA490", "\uA4D0", "\uFE50", "\uFFF0",};
  std::string samples_four_bytes[2] = { "\U0001F600", "\U0001F650", };
  C2D_ImageTint tint;
  *out_width = 0;
  *out_height = 0;

  C2D_PlainImageTint(&tint, C2D_Color32f(red, green, blue, alpha), true);
	Exfont_text_parse(in_string, exfont_part_string, 1024, &characters);

  for(int s = 0; s < characters; s++)
  {
    block = -1;
    unknown = true;
  	if (memcmp((void*)exfont_part_string[s].c_str(), (void*)exfont_font_samples[0].c_str(), 0x1) == 0)
  		break;

  	if (exfont_part_string[s].length() == 1)
  	{
      char_size = 1;
      if(memcmp((void*)exfont_part_string[s].c_str(), (void*)sample_one_byte[0].c_str(), 0x1) < 0)
        block = 0;
    }
    else if(exfont_part_string[s].length() == 2)
    {
      char_size = 2;
      for(int i = 0; i < 10; i++)
      {
        if(memcmp((void*)exfont_part_string[s].c_str(), (void*)samples_two_bytes[i].c_str(), 0x2) < 0)
        {
          block = i + 1;
          break;
        }
      }
    }
    else if(exfont_part_string[s].length() == 3)
    {
      char_size = 3;
      for(int i = 0; i < 37; i++)
      {
        if(memcmp((void*)exfont_part_string[s].c_str(), (void*)samples_three_bytes[i].c_str(), 0x3) < 0)
        {
          block = i + 11;
          break;
        }
      }
    }
    else if(exfont_part_string[s].length() == 4)
    {
      char_size = 4;
      for(int i = 0; i < 2; i++)
      {
        if(memcmp((void*)exfont_part_string[s].c_str(), (void*)samples_four_bytes[i].c_str(), 0x4) < 0)
        {
          block = i + 48;
          break;
        }
      }
    }

    if(block == 25 || block == 46)
    {
      if(!(exfont_ignore_chars.find(exfont_part_string[s]) == std::string::npos))
      {
        unknown = false;
        block = -1;
      }
    }

    if (block != -1 && Sem_query_loaded_external_font_flag(block) && char_size >= 1 && char_size <= 4)
    {
      reverse = false;
      for (int k = 0;;)
      {
        if(!reverse)
          k += 20;
        else
          k--;

        if((k < 0 || k > exfont_font_characters[block]) && reverse)
          break;
        else
          memcmp_result = memcmp((void*)exfont_part_string[s].c_str(), (void*)exfont_font_samples[exfont_font_start_num[block] + k].c_str(), char_size);

        if (memcmp_result == 0)
        {
          unknown = false;
          x_size = (exfont_font_interval[exfont_font_start_num[block] + k] + interval_offset) * texture_size_x;
          Draw_texture(exfont_font_images, tint, exfont_font_start_num[block] + k, (texture_x + x_offset), (texture_y + y_offset), x_size, 20.0 * texture_size_y);
          x_offset += x_size;
          break;
        }
        else if(memcmp_result < 0 || k >= exfont_font_characters[block])
        {
          reverse = true;
          if(k >= exfont_font_characters[block])
            k = exfont_font_characters[block];
        }
      }
    }

    if(unknown)
    {
      x_size = (exfont_font_interval[0] + interval_offset) * texture_size_x;
      Draw_texture(exfont_font_images, tint, 0, (texture_x + x_offset), (texture_y + y_offset), x_size, 20.0 * texture_size_y);
      x_offset += x_size;
    }
  }
  *out_width = x_offset;
  *out_height = y_offset;
}

Result_with_string Exfont_load_exfont(int exfont_num)
{
	Result_with_string result;
	if (exfont_num >= 0 && exfont_num < EXFONT_NUM_OF_FONT_NAME)
	{
		result = Draw_load_texture("romfs:/gfx/font/" + exfont_font_name[exfont_num] + "_font.t3x", exfont_num + 5, exfont_font_images, exfont_font_start_num[exfont_num], exfont_font_characters[exfont_num]);

    if(result.code == 0)
    {
      for(int i = 0; i < exfont_font_characters[exfont_num]; i++)
      {
        C3D_TexSetFilter(exfont_font_images[exfont_font_start_num[exfont_num] + i].tex, GPU_LINEAR, GPU_LINEAR);
        C3D_TexSetWrap(exfont_font_images[exfont_font_start_num[exfont_num] + i].tex, GPU_CLAMP_TO_EDGE, GPU_CLAMP_TO_EDGE);
      }
    }

		if (result.code != 0)
			Exfont_unload_exfont(exfont_num);
	}
	else
	{
		result.code = -1;
		result.string = "Invalid exfont num";
	}

	return result;
}

void Exfont_unload_exfont(int exfont_num)
{
	if (exfont_num >= 0 && exfont_num < EXFONT_NUM_OF_FONT_NAME)
	{
		Draw_free_texture(5 + exfont_num);
		for (int j = exfont_font_start_num[exfont_num]; j < exfont_font_characters[exfont_num]; j++)
			exfont_font_images[j].tex = NULL;
	}
}
